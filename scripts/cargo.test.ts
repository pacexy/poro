import { describe, it, expect } from 'vitest'

import { fetchTables, genSchema } from './cargo'

describe('cargo', () => {
  it('should fetch tables', async () => {
    expect(fetchTables()).resolves.toMatchInlineSnapshot(`
      [
        "Alphabets",
        "BroadcastMusicTrackTypes",
        "BroadcastMusicTracks",
        "BroadcastMusicUsages",
        "CargoAttachments",
        "CargoFields",
        "ChampionFlashcards",
        "Champions",
        "ChromaSets",
        "Chromas",
        "Contracts",
        "CurrentLeagues",
        "Disambiguations",
        "EmptySubpages",
        "Entities",
        "ExternalContent",
        "GCDArchive",
        "Hooks",
        "IgnorePagedata",
        "IndividualAchievements",
        "Items",
        "LadderRankingCycles",
        "LadderRankings",
        "LeagueGroups",
        "Leagues",
        "ListplayerCurrent",
        "LowPriorityRedirects",
        "MatchSchedule",
        "MatchScheduleGame",
        "NASGLadder2018",
        "NASGLadder5Cycles",
        "NASGLadder7Cycles",
        "NTLGlossary",
        "NewsItems",
        "Organizations",
        "ParticipantsArgs",
        "PatchNotes",
        "Pentakills",
        "PicksAndBansCounters",
        "PicksAndBansS7",
        "PlayerCompetitiveRulings",
        "PlayerImages",
        "PlayerLeagueHistory",
        "PlayerPronunciationFiles",
        "PlayerRedirects",
        "PlayerRenames",
        "Players",
        "PostgameJsonMetadata",
        "RegionStatuses",
        "Regions",
        "ResidencyChanges",
        "Retirements",
        "RosterChangePortalDates",
        "RosterChangePortalPages",
        "RosterChanges",
        "RosterRumors",
        "RunesDataPages",
        "ScoreboardCounters",
        "ScoreboardGames",
        "ScoreboardPlayers",
        "ScoreboardTeams",
        "SisterTeams",
        "Skins",
        "SkinsUsed",
        "Standings",
        "StandingsArgs",
        "TeamRedirects",
        "TeamRegionChanges",
        "TeamRenames",
        "TeamRosterPhotos",
        "Teamnames",
        "TeamnamesInputs",
        "TeamnamesPages",
        "Teams",
        "TeamsWithAutoRosters",
        "Tenures",
        "TenuresUnbroken",
        "Tooltips",
        "TournamentGroups",
        "TournamentPlayers",
        "TournamentResults",
        "TournamentResults1v1",
        "TournamentRosters",
        "TournamentScriptsToSkip",
        "TournamentTabs",
        "Tournaments",
        "TwitterArchive",
        "TwitterArchivePages",
        "UserPredictionGroups",
        "UserPredictions",
        "_pageData",
        "_fileData",
      ]
    `)
  })

  it(
    'should generate schema',
    async () => {
      const result = await genSchema()
      expect(result).toMatchFileSnapshot('__snapshots__/schema.ts')
    },
    { timeout: Infinity },
  )
})
